import streamlit as st
import pandas as pd
import numpy as np
import os
import re
import time
from pytube import YouTube
import matplotlib.pyplot as plt
from train_model import CommentGenerationModel

# –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏
@st.cache_resource
def load_model(model_path="./model_output"):
    """–ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏"""
    model = CommentGenerationModel(model_name=model_path, output_dir=model_path)
    model.load_tokenizer_and_model()
    return model

def extract_video_info(url):
    """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ –∏–∑ URL"""
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ YouTube
        yt = YouTube(url)
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ
        title = yt.title
        author = yt.author
        description = yt.description
        thumbnail_url = yt.thumbnail_url
        views = yt.views
        length = yt.length
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–∑—ã–∫–∞ (–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞)
        # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –≤–∏–¥–µ–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º
        is_english = True
        
        return {
            "title": title,
            "author": author,
            "description": description,
            "thumbnail_url": thumbnail_url,
            "views": views,
            "length": length,
            "is_english": is_english
        }
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ URL: {str(e)}")
        return None

def generate_usernames(num_users=5):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –∏–º–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    first_names = ["John", "Emma", "Michael", "Sophia", "David", "Olivia", 
                  "James", "Ava", "Robert", "Isabella", "Alex", "Maria", 
                  "Sam", "Jessica", "Daniel", "Lisa", "Max", "Sarah"]
    
    last_names = ["Smith", "Johnson", "Williams", "Brown", "Jones", "Miller", 
                 "Davis", "Wilson", "Anderson", "Taylor", "Thomas", "Jackson", 
                 "White", "Harris", "Martin", "Lewis", "Clark", "Lee"]
    
    usernames = []
    for _ in range(num_users):
        if np.random.random() < 0.5:
            # –ò–º—è + –§–∞–º–∏–ª–∏—è
            username = np.random.choice(first_names) + np.random.choice(last_names)
        else:
            # –ò–º—è + —á–∏—Å–ª–∞
            username = np.random.choice(first_names) + str(np.random.randint(10, 1000))
        
        usernames.append(username)
    
    return usernames

def format_comments(comments, generate_replies=True):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤"""
    formatted_comments = []
    usernames = generate_usernames(len(comments))
    
    for i, (comment, username) in enumerate(zip(comments, usernames)):
        comment_data = {
            "username": username,
            "comment": comment.strip(),
            "likes": np.random.randint(0, 1000),
            "time": f"{np.random.randint(1, 30)} –¥–Ω–µ–π –Ω–∞–∑–∞–¥",
            "replies": []
        }
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (–¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤)
        if generate_replies and np.random.random() < 0.6:
            num_replies = np.random.randint(1, 3)
            reply_usernames = generate_usernames(num_replies)
            
            for j in range(num_replies):
                reply = {
                    "username": reply_usernames[j],
                    "comment": f"–û—Ç–≤–µ—á–∞—è –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π @{username}: –°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ —Å–æ–≥–ª–∞—Å–µ–Ω! {comment.split(' ')[:5]}..." if np.random.random() < 0.5 else f"–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Ç–æ—á–∫–∞ –∑—Ä–µ–Ω–∏—è, –Ω–æ —è –¥—É–º–∞—é –∏–Ω–∞—á–µ.",
                    "likes": np.random.randint(0, 100),
                    "time": f"{np.random.randint(1, 20)} –¥–Ω–µ–π –Ω–∞–∑–∞–¥"
                }
                comment_data["replies"].append(reply)
        
        formatted_comments.append(comment_data)
    
    return formatted_comments

def main():
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    st.set_page_config(
        page_title="YouTube Comment Generator",
        page_icon="üé¨",
        layout="wide"
    )
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    st.title("üé¨ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è YouTube")
    st.markdown("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω–æ–µ –≤–∏–¥–µ–æ YouTube –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏")
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
    with st.sidebar:
        st.header("–û –ø—Ä–æ–µ–∫—Ç–µ")
        st.markdown("""
        –≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–¥–µ–ª—å GPT-2 large, –æ–±—É—á–µ–Ω–Ω—É—é –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö YouTube,
        –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ –≤–∏–¥–µ–æ.
        
        **–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**
        1. –í–≤–µ–¥–∏—Ç–µ URL-–∞–¥—Ä–µ—Å –≤–∏–¥–µ–æ YouTube
        2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        3. –ù–∞–∂–º–∏—Ç–µ '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏'
        
        **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:**
        - **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤**: –°–∫–æ–ª—å–∫–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
        - **Temperature**: –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å (–≤—ã—à–µ = –±–æ–ª–µ–µ —Å–ª—É—á–∞–π–Ω–æ)
        - **Top-p**: –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–Ω—ã–π –ø–æ—Ä–æ–≥ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (–Ω–∏–∂–µ = –±–æ–ª–µ–µ –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–æ)
        - **–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞**: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
        """)
    
    # –í–≤–æ–¥ URL –≤–∏–¥–µ–æ
    url = st.text_input("–í–≤–µ–¥–∏—Ç–µ URL –≤–∏–¥–µ–æ YouTube:", help="–ù–∞–ø—Ä–∏–º–µ—Ä: https://www.youtube.com/watch?v=dQw4w9WgXcQ")
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        num_comments = st.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:", min_value=1, max_value=20, value=5)
    
    with col2:
        temperature = st.slider("Temperature:", min_value=0.1, max_value=1.5, value=0.8, step=0.1)
    
    with col3:
        top_p = st.slider("Top-p:", min_value=0.1, max_value=1.0, value=0.95, step=0.05)
    
    with col4:
        max_length = st.slider("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞:", min_value=50, max_value=300, value=100, step=10)
        generate_replies_enabled = st.checkbox("–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—ã", value=True)
    
    # –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    if st.button("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏"):
        if url:
            with st.spinner("–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ..."):
                video_info = extract_video_info(url)
            
            if video_info and video_info["is_english"]:
                # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ
                col1, col2 = st.columns([1, 2])
                
                with col1:
                    st.image(video_info["thumbnail_url"], caption="–ü—Ä–µ–≤—å—é –≤–∏–¥–µ–æ")
                
                with col2:
                    st.subheader(video_info["title"])
                    st.markdown(f"**–ê–≤—Ç–æ—Ä:** {video_info['author']}")
                    st.markdown(f"**–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:** {video_info['views']:,}")
                    st.markdown(f"**–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** {video_info['length'] // 60} –º–∏–Ω {video_info['length'] % 60} —Å–µ–∫")
                
                # –£–∫–æ—Ä–æ—á–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∏–¥–µ–æ
                short_description = video_info["description"][:300] + "..." if len(video_info["description"]) > 300 else video_info["description"]
                with st.expander("–û–ø–∏—Å–∞–Ω–∏–µ –≤–∏–¥–µ–æ"):
                    st.markdown(short_description)
                
                # –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
                try:
                    with st.spinner("–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏..."):
                        model = load_model()
                    
                    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–º–ø—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∏–¥–µ–æ
                    prompt = f"<BOS>This video about {video_info['title']}"
                    
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
                    with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤..."):
                        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π –ø—Ä–æ—Ü–µ—Å—Å–∞
                        placeholder = st.empty()
                        comments = []
                        
                        for i in range(num_comments):
                            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–¥–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
                            comment = model.generate_comments(
                                prompt=prompt,
                                max_length=max_length,
                                num_return_sequences=1,
                                temperature=temperature,
                                top_p=top_p,
                                do_sample=True
                            )[0]
                            
                            comments.append(comment)
                            
                            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
                            placeholder.markdown(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {i+1}/{num_comments} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤...")
                        
                        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
                        formatted_comments = format_comments(comments, generate_replies=generate_replies_enabled)
                        
                        # –û—á–∏—Å—Ç–∫–∞ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞
                        placeholder.empty()
                    
                    # –í—ã–≤–æ–¥ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
                    st.subheader("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:")
                    
                    for i, comment_data in enumerate(formatted_comments):
                        with st.container():
                            st.markdown(f"**{comment_data['username']}** ‚Ä¢ {comment_data['time']} ‚Ä¢ üëç {comment_data['likes']}")
                            st.markdown(comment_data['comment'])
                            
                            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤
                            if comment_data["replies"]:
                                with st.container():
                                    for reply in comment_data["replies"]:
                                        st.markdown(f"‚Ü™Ô∏è **{reply['username']}** ‚Ä¢ {reply['time']} ‚Ä¢ üëç {reply['likes']}")
                                        st.markdown(f"&nbsp;&nbsp;&nbsp;&nbsp;{reply['comment']}")
                            
                            st.markdown("---")
                
                except Exception as e:
                    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {str(e)}")
            
            elif video_info and not video_info["is_english"]:
                st.warning("–≠—Ç–æ –≤–∏–¥–µ–æ, –≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ. –ú–æ–¥–µ–ª—å –æ–±—É—á–µ–Ω–∞ –Ω–∞ –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö.")
            else:
                st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ URL.")
        else:
            st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ URL –≤–∏–¥–µ–æ YouTube.")

if __name__ == "__main__":
    main() 